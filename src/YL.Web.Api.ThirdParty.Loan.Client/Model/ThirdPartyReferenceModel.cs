/* 
 * Third Party Loan API
 *
 * Through this API you can can retrieve loan data
 *
 * The version of the OpenAPI document: v1.0
 * Contact: mark.ufland@youlend.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = YL.Web.Api.ThirdParty.Loan.Client.Client.OpenAPIDateConverter;

namespace YL.Web.Api.ThirdParty.Loan.Client.Model
{
    /// <summary>
    /// A model detailing any references provided by a third party for a given loan
    /// </summary>
    [DataContract]
    public partial class ThirdPartyReferenceModel :  IEquatable<ThirdPartyReferenceModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ThirdPartyReferenceModel" /> class.
        /// </summary>
        /// <param name="thirdPartyId">Gets or sets the third party&#39;s unique identifier.</param>
        /// <param name="thirdPartyReference">Gets or sets the reference provided by the third party.</param>
        public ThirdPartyReferenceModel(Guid thirdPartyId = default(Guid), string thirdPartyReference = default(string))
        {
            this.ThirdPartyId = thirdPartyId;
            this.ThirdPartyReference = thirdPartyReference;
        }
        
        /// <summary>
        /// Gets or sets the third party&#39;s unique identifier
        /// </summary>
        /// <value>Gets or sets the third party&#39;s unique identifier</value>
        [DataMember(Name="thirdPartyId", EmitDefaultValue=false)]
        public Guid ThirdPartyId { get; set; }

        /// <summary>
        /// Gets or sets the reference provided by the third party
        /// </summary>
        /// <value>Gets or sets the reference provided by the third party</value>
        [DataMember(Name="thirdPartyReference", EmitDefaultValue=false)]
        public string ThirdPartyReference { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ThirdPartyReferenceModel {\n");
            sb.Append("  ThirdPartyId: ").Append(ThirdPartyId).Append("\n");
            sb.Append("  ThirdPartyReference: ").Append(ThirdPartyReference).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ThirdPartyReferenceModel);
        }

        /// <summary>
        /// Returns true if ThirdPartyReferenceModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ThirdPartyReferenceModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ThirdPartyReferenceModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ThirdPartyId == input.ThirdPartyId ||
                    (this.ThirdPartyId != null &&
                    this.ThirdPartyId.Equals(input.ThirdPartyId))
                ) && 
                (
                    this.ThirdPartyReference == input.ThirdPartyReference ||
                    (this.ThirdPartyReference != null &&
                    this.ThirdPartyReference.Equals(input.ThirdPartyReference))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ThirdPartyId != null)
                    hashCode = hashCode * 59 + this.ThirdPartyId.GetHashCode();
                if (this.ThirdPartyReference != null)
                    hashCode = hashCode * 59 + this.ThirdPartyReference.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
