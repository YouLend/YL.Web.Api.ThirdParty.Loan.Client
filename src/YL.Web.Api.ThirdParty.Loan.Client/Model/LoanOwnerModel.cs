/* 
 * Third Party Loan API
 *
 * Through this API you can can retrieve loan data
 *
 * The version of the OpenAPI document: v1.0
 * Contact: mark.ufland@youlend.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = YL.Web.Api.ThirdParty.Loan.Client.Client.OpenAPIDateConverter;

namespace YL.Web.Api.ThirdParty.Loan.Client.Model
{
    /// <summary>
    /// A model representing a loan owner
    /// </summary>
    [DataContract]
    public partial class LoanOwnerModel :  IEquatable<LoanOwnerModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LoanOwnerModel" /> class.
        /// </summary>
        /// <param name="ownerLenderId">Gets or sets the owner&#39;s Lender ID.</param>
        /// <param name="ownerLenderNumber">Gets or sets the owner&#39;s Lender Number.</param>
        /// <param name="ownershipPercentage">Gets or sets the Ownership Percentage.</param>
        /// <param name="ownershipPaymentStatus">Gets or sets the OwnershipPaymentStatus - \&quot;Failed\&quot;, \&quot;Paid\&quot;, \&quot;Partially Paid\&quot;, or \&quot;Requested\&quot;.</param>
        /// <param name="ownershipPaymentAmountPaid">Gets or sets the Ownership Payment Amount Paid.</param>
        /// <param name="expectedOwnershipPaymentAmount">Gets or sets the Expected Ownership Payment Amount.</param>
        /// <param name="ownerName">Gets or sets the owner&#39;s full name.</param>
        /// <param name="refinancingRepaymentAmountDue">Gets or sets the Refinancing Repayment Amount Due, if applicable.</param>
        /// <param name="totalRepaymentsReceived">Gets or sets the Total Repayments Received.</param>
        /// <param name="totalRepaymentsOwed">Gets or sets the Total Repayments Owed.</param>
        /// <param name="generatedTransferAgreement">generatedTransferAgreement.</param>
        /// <param name="transferAgreementDocumentSigningId">Gets or sets the Transfer Agreement Document Signing ID.</param>
        public LoanOwnerModel(Guid ownerLenderId = default(Guid), int ownerLenderNumber = default(int), double ownershipPercentage = default(double), string ownershipPaymentStatus = default(string), double ownershipPaymentAmountPaid = default(double), double expectedOwnershipPaymentAmount = default(double), string ownerName = default(string), double refinancingRepaymentAmountDue = default(double), double totalRepaymentsReceived = default(double), double totalRepaymentsOwed = default(double), DocumentMetadataModel generatedTransferAgreement = default(DocumentMetadataModel), Guid transferAgreementDocumentSigningId = default(Guid))
        {
            this.OwnerLenderId = ownerLenderId;
            this.OwnerLenderNumber = ownerLenderNumber;
            this.OwnershipPercentage = ownershipPercentage;
            this.OwnershipPaymentStatus = ownershipPaymentStatus;
            this.OwnershipPaymentAmountPaid = ownershipPaymentAmountPaid;
            this.ExpectedOwnershipPaymentAmount = expectedOwnershipPaymentAmount;
            this.OwnerName = ownerName;
            this.RefinancingRepaymentAmountDue = refinancingRepaymentAmountDue;
            this.TotalRepaymentsReceived = totalRepaymentsReceived;
            this.TotalRepaymentsOwed = totalRepaymentsOwed;
            this.GeneratedTransferAgreement = generatedTransferAgreement;
            this.TransferAgreementDocumentSigningId = transferAgreementDocumentSigningId;
        }
        
        /// <summary>
        /// Gets or sets the owner&#39;s Lender ID
        /// </summary>
        /// <value>Gets or sets the owner&#39;s Lender ID</value>
        [DataMember(Name="ownerLenderId", EmitDefaultValue=false)]
        public Guid OwnerLenderId { get; set; }

        /// <summary>
        /// Gets or sets the owner&#39;s Lender Number
        /// </summary>
        /// <value>Gets or sets the owner&#39;s Lender Number</value>
        [DataMember(Name="ownerLenderNumber", EmitDefaultValue=false)]
        public int OwnerLenderNumber { get; set; }

        /// <summary>
        /// Gets or sets the Ownership Percentage
        /// </summary>
        /// <value>Gets or sets the Ownership Percentage</value>
        [DataMember(Name="ownershipPercentage", EmitDefaultValue=false)]
        public double OwnershipPercentage { get; set; }

        /// <summary>
        /// Gets or sets the OwnershipPaymentStatus - \&quot;Failed\&quot;, \&quot;Paid\&quot;, \&quot;Partially Paid\&quot;, or \&quot;Requested\&quot;
        /// </summary>
        /// <value>Gets or sets the OwnershipPaymentStatus - \&quot;Failed\&quot;, \&quot;Paid\&quot;, \&quot;Partially Paid\&quot;, or \&quot;Requested\&quot;</value>
        [DataMember(Name="ownershipPaymentStatus", EmitDefaultValue=false)]
        public string OwnershipPaymentStatus { get; set; }

        /// <summary>
        /// Gets or sets the Ownership Payment Amount Paid
        /// </summary>
        /// <value>Gets or sets the Ownership Payment Amount Paid</value>
        [DataMember(Name="ownershipPaymentAmountPaid", EmitDefaultValue=false)]
        public double OwnershipPaymentAmountPaid { get; set; }

        /// <summary>
        /// Gets or sets the Expected Ownership Payment Amount
        /// </summary>
        /// <value>Gets or sets the Expected Ownership Payment Amount</value>
        [DataMember(Name="expectedOwnershipPaymentAmount", EmitDefaultValue=false)]
        public double ExpectedOwnershipPaymentAmount { get; set; }

        /// <summary>
        /// Gets or sets the owner&#39;s full name
        /// </summary>
        /// <value>Gets or sets the owner&#39;s full name</value>
        [DataMember(Name="ownerName", EmitDefaultValue=false)]
        public string OwnerName { get; set; }

        /// <summary>
        /// Gets or sets the Refinancing Repayment Amount Due, if applicable
        /// </summary>
        /// <value>Gets or sets the Refinancing Repayment Amount Due, if applicable</value>
        [DataMember(Name="refinancingRepaymentAmountDue", EmitDefaultValue=false)]
        public double RefinancingRepaymentAmountDue { get; set; }

        /// <summary>
        /// Gets or sets the Total Repayments Received
        /// </summary>
        /// <value>Gets or sets the Total Repayments Received</value>
        [DataMember(Name="totalRepaymentsReceived", EmitDefaultValue=false)]
        public double TotalRepaymentsReceived { get; set; }

        /// <summary>
        /// Gets or sets the Total Repayments Owed
        /// </summary>
        /// <value>Gets or sets the Total Repayments Owed</value>
        [DataMember(Name="totalRepaymentsOwed", EmitDefaultValue=false)]
        public double TotalRepaymentsOwed { get; set; }

        /// <summary>
        /// Gets or Sets GeneratedTransferAgreement
        /// </summary>
        [DataMember(Name="generatedTransferAgreement", EmitDefaultValue=false)]
        public DocumentMetadataModel GeneratedTransferAgreement { get; set; }

        /// <summary>
        /// Gets or sets the Transfer Agreement Document Signing ID
        /// </summary>
        /// <value>Gets or sets the Transfer Agreement Document Signing ID</value>
        [DataMember(Name="transferAgreementDocumentSigningId", EmitDefaultValue=false)]
        public Guid TransferAgreementDocumentSigningId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LoanOwnerModel {\n");
            sb.Append("  OwnerLenderId: ").Append(OwnerLenderId).Append("\n");
            sb.Append("  OwnerLenderNumber: ").Append(OwnerLenderNumber).Append("\n");
            sb.Append("  OwnershipPercentage: ").Append(OwnershipPercentage).Append("\n");
            sb.Append("  OwnershipPaymentStatus: ").Append(OwnershipPaymentStatus).Append("\n");
            sb.Append("  OwnershipPaymentAmountPaid: ").Append(OwnershipPaymentAmountPaid).Append("\n");
            sb.Append("  ExpectedOwnershipPaymentAmount: ").Append(ExpectedOwnershipPaymentAmount).Append("\n");
            sb.Append("  OwnerName: ").Append(OwnerName).Append("\n");
            sb.Append("  RefinancingRepaymentAmountDue: ").Append(RefinancingRepaymentAmountDue).Append("\n");
            sb.Append("  TotalRepaymentsReceived: ").Append(TotalRepaymentsReceived).Append("\n");
            sb.Append("  TotalRepaymentsOwed: ").Append(TotalRepaymentsOwed).Append("\n");
            sb.Append("  GeneratedTransferAgreement: ").Append(GeneratedTransferAgreement).Append("\n");
            sb.Append("  TransferAgreementDocumentSigningId: ").Append(TransferAgreementDocumentSigningId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LoanOwnerModel);
        }

        /// <summary>
        /// Returns true if LoanOwnerModel instances are equal
        /// </summary>
        /// <param name="input">Instance of LoanOwnerModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LoanOwnerModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OwnerLenderId == input.OwnerLenderId ||
                    (this.OwnerLenderId != null &&
                    this.OwnerLenderId.Equals(input.OwnerLenderId))
                ) && 
                (
                    this.OwnerLenderNumber == input.OwnerLenderNumber ||
                    this.OwnerLenderNumber.Equals(input.OwnerLenderNumber)
                ) && 
                (
                    this.OwnershipPercentage == input.OwnershipPercentage ||
                    this.OwnershipPercentage.Equals(input.OwnershipPercentage)
                ) && 
                (
                    this.OwnershipPaymentStatus == input.OwnershipPaymentStatus ||
                    (this.OwnershipPaymentStatus != null &&
                    this.OwnershipPaymentStatus.Equals(input.OwnershipPaymentStatus))
                ) && 
                (
                    this.OwnershipPaymentAmountPaid == input.OwnershipPaymentAmountPaid ||
                    this.OwnershipPaymentAmountPaid.Equals(input.OwnershipPaymentAmountPaid)
                ) && 
                (
                    this.ExpectedOwnershipPaymentAmount == input.ExpectedOwnershipPaymentAmount ||
                    this.ExpectedOwnershipPaymentAmount.Equals(input.ExpectedOwnershipPaymentAmount)
                ) && 
                (
                    this.OwnerName == input.OwnerName ||
                    (this.OwnerName != null &&
                    this.OwnerName.Equals(input.OwnerName))
                ) && 
                (
                    this.RefinancingRepaymentAmountDue == input.RefinancingRepaymentAmountDue ||
                    this.RefinancingRepaymentAmountDue.Equals(input.RefinancingRepaymentAmountDue)
                ) && 
                (
                    this.TotalRepaymentsReceived == input.TotalRepaymentsReceived ||
                    this.TotalRepaymentsReceived.Equals(input.TotalRepaymentsReceived)
                ) && 
                (
                    this.TotalRepaymentsOwed == input.TotalRepaymentsOwed ||
                    this.TotalRepaymentsOwed.Equals(input.TotalRepaymentsOwed)
                ) && 
                (
                    this.GeneratedTransferAgreement == input.GeneratedTransferAgreement ||
                    (this.GeneratedTransferAgreement != null &&
                    this.GeneratedTransferAgreement.Equals(input.GeneratedTransferAgreement))
                ) && 
                (
                    this.TransferAgreementDocumentSigningId == input.TransferAgreementDocumentSigningId ||
                    (this.TransferAgreementDocumentSigningId != null &&
                    this.TransferAgreementDocumentSigningId.Equals(input.TransferAgreementDocumentSigningId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OwnerLenderId != null)
                    hashCode = hashCode * 59 + this.OwnerLenderId.GetHashCode();
                hashCode = hashCode * 59 + this.OwnerLenderNumber.GetHashCode();
                hashCode = hashCode * 59 + this.OwnershipPercentage.GetHashCode();
                if (this.OwnershipPaymentStatus != null)
                    hashCode = hashCode * 59 + this.OwnershipPaymentStatus.GetHashCode();
                hashCode = hashCode * 59 + this.OwnershipPaymentAmountPaid.GetHashCode();
                hashCode = hashCode * 59 + this.ExpectedOwnershipPaymentAmount.GetHashCode();
                if (this.OwnerName != null)
                    hashCode = hashCode * 59 + this.OwnerName.GetHashCode();
                hashCode = hashCode * 59 + this.RefinancingRepaymentAmountDue.GetHashCode();
                hashCode = hashCode * 59 + this.TotalRepaymentsReceived.GetHashCode();
                hashCode = hashCode * 59 + this.TotalRepaymentsOwed.GetHashCode();
                if (this.GeneratedTransferAgreement != null)
                    hashCode = hashCode * 59 + this.GeneratedTransferAgreement.GetHashCode();
                if (this.TransferAgreementDocumentSigningId != null)
                    hashCode = hashCode * 59 + this.TransferAgreementDocumentSigningId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
